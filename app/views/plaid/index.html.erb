<!DOCTYPE html>
<html>
<head>
  <title>Plaid | Rails Quickstart</title>
  <%= csrf_meta_tags %>
  <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const createLinkToken = async () => {
        const res = await fetch("/plaid/create_link_token", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
          }
        });
        const data = await res.json();
        const linkToken = data.link_token;
        localStorage.setItem("link_token", linkToken);
        return linkToken;
      };

      // Fetch 1 dummy transaction after linking
      const getTransaction = async function () {
        const res = await fetch("/plaid/one_transaction");
        const data = await res.json();

        const txDiv = document.getElementById("transaction");

        // Basic error handling if API failed
        if (data.error) {
          txDiv.textContent = "‚ö†Ô∏è Failed to load transaction.";
          return;
        }

        // Format into clean HTML
        txDiv.innerHTML = `
          üßæ <strong>${data.name}</strong><br>
          üí∏ $${data.amount.toFixed(2)}<br>
          üìÖ ${data.date}
        `;
      };

      // Monthly expenses
      const getMonthlyExpenses = async () => {
        const res = await fetch("/plaid/monthly_expenses");
        const data = await res.json(); 

        const txDiv = document.getElementById("transaction");
        if (data.error) {
          txDiv.textContent = "‚ö†Ô∏è Failed to load expenses.";
          return;
        }

        txDiv.innerHTML = "<h3>üìÖ Monthly Expenses (Last 4 Months)</h3><ul>";

        for (const [month, amount] of Object.entries(data)) {
          txDiv.innerHTML += `<li><strong>${month}:</strong> üí∏ $${amount.toFixed(2)}</li>`;
        }

        txDiv.innerHTML += "</ul>";
      };

      // Show monthly incomes
      const getMonthlyIncomes = async () => {
        const res = await fetch("/plaid/monthly_income");
        const data = await res.json();

        const txDiv = document.getElementById("transaction");
        if (data.error) {
          txDiv.textContent = "‚ö†Ô∏è Failed to load incomes.";
          return;
        }

        txDiv.innerHTML = "<h3>üìÖ Monthly Incomes (Last 4 Months)</h3><ul>";

        for (const [month, amount] of Object.entries(data)) {
          txDiv.innerHTML += `<li><strong>${month}:</strong> üí∞ $${amount.toFixed(2)}</li>`;
        }

        txDiv.innerHTML += "</ul>";
      };

      // Fetch and display net worth
      const getNetWorth = async () => {
        const res = await fetch("/plaid/net_worth");
        const data = await res.json();

        const txDiv = document.getElementById("transaction");
        if (data.error) {
          txDiv.textContent = "‚ö†Ô∏è Failed to load net worth.";
          return;
        }

        txDiv.innerHTML = `
          <h3>üí∞ Net Worth</h3>
          <p><strong>Total:</strong> $${data.net_worth.toFixed(2)}</p>
        `;
      };

      // Initialize Plaid Link
      const handler = Plaid.create({
        token: await createLinkToken(),
        onSuccess: async (publicToken, metadata) => {
          await fetch("/plaid/exchange_public_token", {
            method: "POST",
            body: JSON.stringify({ public_token: publicToken }),
            headers: {
              "Content-Type": "application/json",
              "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
            },
          });

          //await getTransaction(); //Replace balance with transaction
        }
      });

      // Open Link when button is clicked
      const linkAccountButton = document.getElementById("link-account");
      linkAccountButton.addEventListener("click", (event) => {
        handler.open();
      });

      const showExpensesButton = document.getElementById("show-expenses");
      showExpensesButton.addEventListener("click", () => {
        getMonthlyExpenses();
      });

      // Button: Show Incomes
      const showIncomesButton = document.getElementById("show-incomes");
      showIncomesButton.addEventListener("click", () => {
        getMonthlyIncomes();
      });

      // Button: Show Net Worth
      const showNetWorthButton = document.getElementById("show-net-worth");
      showNetWorthButton.addEventListener("click", () => {
        getNetWorth();
      });

      // Getting balance
      const getBalance = async function () {
        const response = await fetch("/plaid/get_balance", {
          method: "GET",
          headers: {
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
          }
        });
        const data = await response.json();
        const pre = document.getElementById("response");
        pre.textContent = JSON.stringify(data, null, 2);
        pre.style.background = "#F6F6F6";
      };
    });
  </script>
  <style>
    #response {
      top: 60px;
      margin-left: 10px;
      bottom: 0;
      position: fixed;
      overflow-y: scroll;
      overflow-x: hidden;
      font-size: 14px;
      padding: 10px;
    }
    #link-account {
      padding: 10px 15px;
      background-color: #212529;
      color: white;
      border: none;
      border-radius: 4px;
      font-weight: bold;
      cursor: pointer;
      margin: 15px;
    }
  </style>
</head>
<body>
<% @banks %>
  <button type="button" id="link-account">
    <strong>Link account</strong>
  </button>

  <button type="button" id="show-expenses"> 
    <strong>Show Monthly Expenses</strong>
  </button>

  <button type="button" id="show-incomes"> 
    <strong>Show Monthly Incomes</strong>
  </button>

  <button type="button" id="show-net-worth">
    <strong>Show Net Worth</strong>
  </button>

  <div id="transaction" style="padding: 20px; font-size: 16px;"></div>

</body>
</html>